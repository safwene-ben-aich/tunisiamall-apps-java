/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.esprit.tunisiamall.gui;


import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.*;
import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import edu.esprit.tunisiamall.dao.classes.ResponsableEnseigneDAO;
import edu.esprit.tunisiamall.dao.classes.ResponsableEnseigneDAO;
import edu.esprit.tunisiamall.entities.ResponsableEnseigne;
import edu.esprit.tunisiamall.utils.*;

/**
 *
 * @author dali
 */
public class Formulairresp extends javax.swing.JFrame {

    /**
     * Creates new form Formulairresp
     */
    public Formulairresp() {
        initComponents();
        getContentPane().setBackground(Color.decode("#AAC7CD"));
        this.setLocationRelativeTo(null);
        exit.setToolTipText("Acceuil");
        getRootPane().setDefaultButton(add);
        add.requestFocus();
        ResponsableEnseigneDAO rdao = new ResponsableEnseigneDAO();
        ResponsableEnseigne resp = new ResponsableEnseigne();
        
        
        List<ResponsableEnseigne> list=rdao.Display();
        DefaultTableModel model =(DefaultTableModel) Tableresp.getModel();
        for(ResponsableEnseigne r:list){
            int x = r.getEtat();
            String et ;
            if (x==2) {  et = "Non Bloqueé" ; } else {et="Bloquée" ;}
         model.addRow(new Object[]{r.getCin(),r.getNom(),r.getPrenom(),
               r.getSexe(),r.getLogin(),r.getPassword(),r.getQRCode(),r.getMail(),r.getAdresse(),r.getTelephone(),r.getImage(),r.getRole(),et}); 
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cin = new javax.swing.JTextField();
        nom = new javax.swing.JTextField();
        prenom = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tableresp = new javax.swing.JTable();
        password = new javax.swing.JTextField();
        mail = new javax.swing.JTextField();
        login = new javax.swing.JTextField();
        adresse = new javax.swing.JTextField();
        findtxt = new javax.swing.JTextField();
        Telephone = new javax.swing.JTextField();
        exit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        bloc = new javax.swing.JButton();
        mailbtt = new javax.swing.JButton();
        qrcodeJtextfield = new javax.swing.JTextField();
        imageJtextField = new javax.swing.JTextField();
        jRadioButtonFemmeSexe = new javax.swing.JRadioButton();
        jRadioButtonHommeSexe = new javax.swing.JRadioButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion Responsable");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cinActionPerformed(evt);
            }
        });
        getContentPane().add(cin, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 190, 30));
        getContentPane().add(nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 190, 30));
        getContentPane().add(prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 190, 30));

        add.setText("Ajouter");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 470, 90, 30));

        delete.setText("Supprimer");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 470, 100, 30));

        Tableresp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CIN", "Nom", "Prenom","SEXE", "Login", "Password", "QRCODE", "Mail", "Adresse", "Telephone ", "ROLE", "IMAGE", "Etat"
            }
        ));
        jScrollPane1.setViewportView(Tableresp);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 820, 130));
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, 190, 30));
        getContentPane().add(mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 490, 190, 30));
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 190, 30));

        adresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adresseActionPerformed(evt);
            }
        });
        getContentPane().add(adresse, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 170, 190, 30));

        findtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findtxtActionPerformed(evt);
            }
        });
        findtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                findtxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                findtxtKeyReleased(evt);
            }
        });
        getContentPane().add(findtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 530, 190, 30));

        Telephone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TelephoneActionPerformed(evt);
            }
        });
        getContentPane().add(Telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 210, 190, 30));

        exit.setText("Retour");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 30, 80, 30));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        bloc.setText("Bloquer");
        bloc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blocActionPerformed(evt);
            }
        });
        getContentPane().add(bloc, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 470, 100, 30));

        mailbtt.setText("Envoyer un mail");
        mailbtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailbttActionPerformed(evt);
            }
        });
        getContentPane().add(mailbtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 470, 130, 30));

        qrcodeJtextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qrcodeJtextfieldActionPerformed(evt);
            }
        });
        getContentPane().add(qrcodeJtextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, 190, 30));

        imageJtextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageJtextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(imageJtextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 260, 190, 30));

        jRadioButtonFemmeSexe.setText("Femme");
        getContentPane().add(jRadioButtonFemmeSexe, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, -1));

        jRadioButtonHommeSexe.setSelected(true);
        jRadioButtonHommeSexe.setText("Homme");
        getContentPane().add(jRadioButtonHommeSexe, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/esprit/tunisiamall/images/adminresp.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 4, 1010, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cinActionPerformed

    private void adresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adresseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adresseActionPerformed

    private void TelephoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TelephoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TelephoneActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        
        String strCin       = cin.getText();
        String strNom       = nom.getText();
        String strPrenom    = prenom.getText();
        String strLogin     = login.getText();
        String strPassword  = password.getText();
        String strmail      = mail.getText();
        String strTelephone = Telephone.getText();
        String strAdresse   = adresse.getText();
        
        
        
        
        
//        if(!Utilis.isNnumeric(strTelephone)){
//            Telephone.setBackground(Color.RED);
//            
//     
//        }
//        else
//        {
//            
//            Telephone.setBackground(Color.WHITE);
//        }
        
        ResponsableEnseigneDAO rdao = new ResponsableEnseigneDAO();
        ResponsableEnseigne resp = new ResponsableEnseigne ();
        
        if ((!"".equals(cin.getText())) && (!"".equals(nom.getText())) && (!"".equals(prenom.getText())) && (!"".equals(adresse.getText()))
                && (!"".equals(login.getText())) && (!"".equals(password.getText())) && (!"".equals(mail.getText()))
                && (!"".equals(Telephone.getText())) && (jRadioButtonHommeSexe.isSelected() ||  jRadioButtonFemmeSexe.isSelected())) {
           
        
        resp.setId(5);
        resp.setCin(cin.getText());
        resp.setNom(nom.getText());
        resp.setPrenom(prenom.getText());
        resp.setAdresse(adresse.getText());
        resp.setLogin(login.getText());
        resp.setPassword(password.getText());
        resp.setMail(mail.getText());
        if (jRadioButtonFemmeSexe.isSelected()){
            resp.setSexe("FEMME");
        }
        else {
            resp.setSexe("HOMME");
        }
        
        
        
        resp.setTelephone(Telephone.getText());
        resp.setQRCode(this.qrcodeJtextfield.getText());
        resp.setImage(this.imageJtextField.getText());
        resp.setEtat(2);
        
        rdao.add(resp);
        JOptionPane.showMessageDialog(rootPane,"Responsable Ajoutée");
        
        List<ResponsableEnseigne> list=rdao.Display();
        DefaultTableModel model =(DefaultTableModel) Tableresp.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
               model.removeRow(i);
                                           }
        for(ResponsableEnseigne r:list){
        //    System.out.println(r.);
            int x = r.getEtat();
            String et ;
            if (x==2) {  et = "Non Bloqueé" ; } else {et="Bloquée" ;}
           model.addRow(new Object[]{r.getCin(),r.getNom(),r.getPrenom(),
               r.getSexe(),r.getLogin(),r.getPassword(),r.getQRCode(),r.getMail(),r.getAdresse(),r.getTelephone(),r.getImage(),r.getRole(),et}); 
        }
        
        
        Date date=new Date();
            FileOutputStreamClass fosc=new FileOutputStreamClass();
            String ajout="Le responsable "+strPrenom+" "+strNom+" a été ajouté le  :"+date;
            fosc.add(ajout);
            //System.out.println();
        
        
    }
        
        
        else {
            //JOptionPane.showMessageDialog(rootPane, "Veuillez remplir tous les champs  ");
            JOptionPane.showMessageDialog(new JFrame(),"Veuillez remplir tous les champs","ERREUR ",JOptionPane.ERROR_MESSAGE);
            
            }
        
        
        //--------------------------Envoi de Mail---------------------------
        
        
        
        
        
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", "587");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "587");
        
        
        Session session= Session.getInstance(props,
             new javax.mail.Authenticator() {
                 protected PasswordAuthentication getPasswordAuthentication(){
                 return new PasswordAuthentication("mohamedali.boughanmi@esprit.tn", "dalio456");
                   
                 } 
             
             }
              
                );
        
       try{
            
           Message message = new MimeMessage (session);
           message.setFrom(new InternetAddress(mail.getText()) );
           message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(mail.getText()));
           message.setSubject("Test Mail");
           message.setText("Salut Mr   "+nom.getText()+"  "+prenom.getText()+", Votre compte a été ajouté avec succès ");
           props.put("mail.smtp.starttls.enable", "true");
           Transport.send(message);
           JOptionPane.showMessageDialog(null, "Mail envoyé");
           
       }
       catch(Exception e){
           
           JOptionPane.showMessageDialog(null, e);
       }
      
      
        
     
        
        
        
        
        
    }//GEN-LAST:event_addActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:

        HomeAdmin home = null;
        home = new HomeAdmin();
        home.setVisible(true);
        this.setVisible(false);
        
        
        
    }//GEN-LAST:event_exitActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        
        int i=Tableresp.getSelectedRow();
        String id=Tableresp.getValueAt(i,0).toString();
        DefaultTableModel model =(DefaultTableModel) Tableresp.getModel();
        ResponsableEnseigneDAO resp=new ResponsableEnseigneDAO();
      
        resp.delete(Integer.parseInt(id));
        
        
        model.removeRow(Tableresp.getSelectedRow());
        
        
//        String cin= JOptionPane.showInputDialog("Le CIN du Responsable a supprimé :");
//         if (! cin.equals("")) {
//             ResponsableDao rdao = new ResponsableDao();
//             Responsable resp = new Responsable ();
//             resp.setCin(cin);
//             rdao.delete(resp);
//             JOptionPane.showMessageDialog(rootPane,"Responsable Supprimé");
//             List<Responsable> list=rdao.Display();
//             DefaultTableModel model =(DefaultTableModel) Tableresp.getModel();
//        int rowCount = model.getRowCount();
//        for (int j = rowCount - 1; j >= 0; j--) {
//               model.removeRow(j);
//                                           }
//        for(Responsable r:list){
//            int x = r.getEtat();
//            String et ;
//            if (x==2) {  et = "Non Bloqueé" ; } else {et="bloquée" ;}
//           model.addRow(new Object[]{r.getPrenom(),r.getNom(),r.getCin(),
//               r.getLogin(),r.getPassword(),r.getMail(),r.getAdresse(),r.getTelephone(),et}); 
//        }
//} else {
//           //JOptionPane.showMessageDialog(rootPane,"Veuillez saisir l'ID ");  
//             JOptionPane.showMessageDialog(new JFrame(),"Veuillez saisir le CIN du responsable ","ERREUR ",JOptionPane.ERROR_MESSAGE);
//        }
         
        
        
        
        
    }//GEN-LAST:event_deleteActionPerformed

    private void blocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blocActionPerformed
        // TODO add your handling code here:
        
        
        int i=Tableresp.getSelectedRow();
        String CIN=Tableresp.getValueAt(i,0).toString();
        String mail=Tableresp.getValueAt(i,7).toString();
        String nom=Tableresp.getValueAt(i,1).toString();
        String Prenom=Tableresp.getValueAt(i,2).toString();
        DefaultTableModel model =(DefaultTableModel) Tableresp.getModel();
        ResponsableEnseigneDAO resp=new ResponsableEnseigneDAO();
      
       // System.out.println(id);
        resp.Block(CIN);        
        
        
        
//        String cin= JOptionPane.showInputDialog("Le CIN du Responsable a bloquée :");
//        if (! cin.equals("")) {
//             ResponsableDao rdao = new ResponsableDao();
//             Responsable resp = new Responsable ();
//             resp.setCin(cin);
//             rdao.Block(resp);
//             JOptionPane.showMessageDialog(rootPane,"Responsable Bloqué");
             List<ResponsableEnseigne> list=resp.Display();
             
             int rowCount = model.getRowCount();
        for (int j = rowCount - 1; j >= 0; j--) {
               model.removeRow(j);
                                           }
        for(ResponsableEnseigne r:list){
            int x = r.getEtat();
            String et ;
            if (x==2) {  et = "Non Bloqueé" ; } else {et="Bloquée" ;}
         model.addRow(new Object[]{r.getCin(),r.getNom(),r.getPrenom(),
               r.getSexe(),r.getLogin(),r.getPassword(),r.getQRCode(),r.getMail(),r.getAdresse(),r.getTelephone(),r.getImage(),r.getRole(),et}); 
        } 
//        
//        } else {
//            JOptionPane.showMessageDialog(new JFrame(),"Veuillez saisir le CIN du responsable ","ERREUR ",JOptionPane.ERROR_MESSAGE);
//        }
        
        
        //------------------ Envoi de Mail -----------------------
//        int k=Tableresp.getSelectedRow();
//        String mail=Tableresp.getValueAt(k,5).toString();
//        String nom=Tableresp.getValueAt(k,5).toString();
//        String Prenom=Tableresp.getValueAt(k,5).toString();
        
        
        
        
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", "587");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "587");
        
        
        Session session= Session.getInstance(props,
             new javax.mail.Authenticator() {
                 protected PasswordAuthentication getPasswordAuthentication(){
                 return new PasswordAuthentication("mohamedali.boughanmi@esprit.tn", "dalio456");
                   
                 } 
             
             }
              
                );
        
       try{
            
           Message message = new MimeMessage (session);
           message.setFrom(new InternetAddress(mail) );
           message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(mail));
           message.setSubject("Test Mail");
           message.setText("Salut Mr   "+nom+"  "+Prenom+", Dsl de vous l'informer mais votre compte a été bloquée ");
           props.put("mail.smtp.starttls.enable", "true");
           Transport.send(message);
           JOptionPane.showMessageDialog(null, "Mail envoyé");
           
       }
       catch(Exception e){
           
           JOptionPane.showMessageDialog(null, e);
       }
        
        
        
        
        
    }//GEN-LAST:event_blocActionPerformed

    private void mailbttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailbttActionPerformed
        // TODO add your handling code here:
        
        int i=Tableresp.getSelectedRow();
        String mail=Tableresp.getValueAt(i,5).toString();
        
        
        this.setVisible(false);
        MailSend mailSend = new MailSend();
        
        mailSend.setMailDestinataire(mail);
        mailSend.setInformationUser();
        mailSend.setVisible(true);
        
        
        
        
        
        
    }//GEN-LAST:event_mailbttActionPerformed

    private void findtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findtxtKeyReleased
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_findtxtKeyReleased

    private void findtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findtxtKeyPressed
        // TODO add your handling code here:
          //model.setRowCount(0);
//         ResponsableDao resp=new ResponsableDao();
//        List<Responsable> list=resp.Display();
//        DefaultTableModel model =(DefaultTableModel) Tableresp.getModel();
//         
//        
//        
//        
//        for(Responsable r:list){
//            
//           if (r.getCin().contains(findtxt.getText())){
//        
//               int rowCount = model.getRowCount();
//               System.out.println(model.getRowCount() + "++++");
//               for (int j = rowCount - 1; j >= 0; j--) {
//                      model.removeRow(j);
//                                                       }
//             
//               int x = r.getEtat();   
//               String et ;
//               if (x==2) {  et = "Non Bloqueé" ; } else {et="Bloquée" ;}
//               model.addRow(new Object[]{r.getPrenom(),r.getNom(),r.getCin(),
//                       r.getLogin(),r.getPassword(),r.getMail(),r.getAdresse(),r.getTelephone(),et}); 
//               
//         
//                                                       }
//       
//           
//        }
//        
    }//GEN-LAST:event_findtxtKeyPressed

    private void findtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findtxtActionPerformed
        // TODO add your handling code here:
        String mot = findtxt.getText();
				for (int ligne = 0; ligne <= Tableresp.getRowCount() - 1; ligne++) {
					for (int col = 0; col <= Tableresp.getColumnCount() - 1; col++) {
						if (mot.equals(Tableresp.getValueAt(ligne, col))) {
							Tableresp.scrollRectToVisible(Tableresp.getCellRect(ligne,
									0, true));
							Tableresp.setRowSelectionInterval(ligne, ligne);
							for (int i = 0; i <= Tableresp.getColumnCount() - 1; i++) {
								Tableresp.getColumnModel().getColumn(i)
										.setCellRenderer(new Recherche());
							}
						}
					}
				}
        
        
        
    }//GEN-LAST:event_findtxtActionPerformed

    private void qrcodeJtextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qrcodeJtextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qrcodeJtextfieldActionPerformed

    private void imageJtextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageJtextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imageJtextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulairresp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulairresp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulairresp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulairresp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulairresp().setVisible(true);
            }
        });
    }
public static class Recherche extends DefaultTableCellRenderer {
		public Component getTableCellRendererComponent(JTable table,
				Object valeur, boolean selectionne, boolean estSelectionne,
				int Lig, int Col) {
			super.getTableCellRendererComponent(table, valeur, selectionne,
					estSelectionne, Lig, Col);
			if (Lig == table.getSelectedRow()) {
				setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1,
						Color.RED)); // en pixels
			}
			return this;
		}
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tableresp;
    private javax.swing.JTextField Telephone;
    private javax.swing.JButton add;
    private javax.swing.JTextField adresse;
    private javax.swing.JLabel bg;
    private javax.swing.JButton bloc;
    private javax.swing.JTextField cin;
    private javax.swing.JButton delete;
    private javax.swing.JButton exit;
    private javax.swing.JTextField findtxt;
    private javax.swing.JTextField imageJtextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JRadioButton jRadioButtonFemmeSexe;
    private javax.swing.JRadioButton jRadioButtonHommeSexe;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField login;
    private javax.swing.JTextField mail;
    private javax.swing.JButton mailbtt;
    private javax.swing.JTextField nom;
    private javax.swing.JTextField password;
    private javax.swing.JTextField prenom;
    private javax.swing.JTextField qrcodeJtextfield;
    // End of variables declaration//GEN-END:variables
}
